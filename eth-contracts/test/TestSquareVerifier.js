// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var SquareVerifier = artifacts.require('./../../zokrates/code/square/verifier.sol');
var proof = require('./../../zokrates/code/square/proof.json');


contract('TestERC721Mintable', async() => {

  describe('match square verifier spec', function () {
    // Test verification with correct proof
    // - use the contents from proof.json generated from zokrates steps
    it('should return true for correct proof', async function () { 
        var result = await SquareVerifier.verifyTx(proof.a, proof.b, proof.c, proof.input);
        assert.equal(result, true, "Failed to verify a true proof");
    }) 
        
    // Test verification with incorrect proof
    it('should return false for incorrect proof', async function () { 
      
      var result = await SquareVerifier.verifyTx(proof.a, proof.b, proof.c, proof.input);
      assert.equal(result, true, "Failed to verify a true proof");
  }) 
  }
}